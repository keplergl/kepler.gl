name: Build KeplerGL Python Package

on: push

jobs:

  build_and_publish:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[ci skip]') && !contains(github.event.head_commit.message, '[skip ci]')"

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js 12.x
        uses: actions/setup-node@v2
        with:
          node-version: 12.x

      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install twine virtualenv

      - name: Build KeplerGL
        env:
          MapboxAccessTokenJupyter: ${{ secrets.MAPBOXTOKEN }}
        run: |
          python -m virtualenv venv
          source venv/bin/activate
          pip install jupyter jupyterlab jupyter-packaging
          cd bindings/kepler.gl-jupyter
          python setup.py sdist

      - name: Test KeplerGL
        run: |
          source venv/bin/activate
          pip install bindings/kepler.gl-jupyter/dist/*.tar.gz
          if [ ! -f "venv/share/jupyter/nbextensions/keplergl-jupyter/index.js" ]; then
            venv/bin/jupyter nbextension install --py --sys-prefix keplergl
            venv/bin/jupyter nbextension enable --py --sys-prefix keplergl
          fi
          venv/bin/jupyter nbconvert --execute bindings/kepler.gl-jupyter/notebooks/DataFrame.ipynb --to python
          python bindings/kepler.gl-jupyter/notebooks/DataFrame.py

      - name: Create artifact 
        uses: actions/upload-artifact@v2
        with:
          name: keplergl-pypi
          path: bindings/kepler.gl-jupyter/dist/

      - name: Publish Pypi
        if: github.event_name == 'release' && github.event.action == 'created'
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.npm_token }}
        run: |
          python -m twine upload bindings/kepler.gl-jupyter/dist/*.tar.gz 
    